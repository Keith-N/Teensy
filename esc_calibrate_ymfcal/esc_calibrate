// ESC_CALIBRATION 
// 1. UPLOAD THE CODE TO TEENSY 3.5 
// 2. UNPLUG CORD TO TEENSY 
// 3. TURN RECIEVER ON AND MOVE TO FULL THROTTLE 
// 4. WAIT FOR MOTORS TO FINISH BEEPING 
// 5. MOVE THORTTLE TO LOW POSITION
// 6. ESC ARE NOW CALIBRATED 
// 7. MOVE THROTTLE UP AGAIN TO TEST CALIBRATION
// 8. IF MOTORS DO NOT ALL START AT THE SAME TIME START OVER
// Created by: Joshua Wallace 
// Date: 3/4/18

///////////////////////////GLOBAL VARIABLES//////////////////////////////////////

// Libaries 
#include <Arduino.h>
#include <Wire.h>
// Variabels for interupt 
unsigned long current_time, timer_1, timer_2, timer_3, timer_4, timer;
volatile int receiver_input_channel_1, receiver_input_channel_2, receiver_input_channel_3, receiver_input_channel_4;
byte last_channel_1, last_channel_2, last_channel_3, last_channel_4;

// Reciever Pins 
int ch1 = 7;
int ch2 = 8;
int ch3 = 14;
int ch4 = 35;

// Main Loop 
int loop_counter;

// esc
int esc_1 = 5;
int esc_2 = 6;
int esc_3 = 10;
int esc_4 = 20;


int pwmMax = 256;
int escInit = pwmMax/4;
int escPulseTime = 4000;
int escPulse1 = 64;

// led
int led = 13;


///////////////////////////////////SUBROUNTINES////////////////////////////////////
// This routine is called every time input 7, 8, 14 or 35 changed state
void chInt(){
	current_time = micros();
	//Channel 1=========================================
	if(digitalReadFast(ch1) == HIGH){                                        //Is input 8 high?
		if(last_channel_1 == 0){                                   //Input 8 changed from 0 to 1
			last_channel_1 = 1;                                      //Remember current input state
			timer_1 = current_time;                                  //Set timer_1 to current_time
		}
	}
	else if(last_channel_1 == 1){                                //Input 8 is not high and changed from 1 to 0
		last_channel_1 = 0;                                        //Remember current input state
		receiver_input_channel_1 = current_time - timer_1;         //Channel 1 is current_time - timer_1
	}
	//Channel 2=========================================
	if(digitalReadFast(ch2) == HIGH){                                       //Is input 9 high?
		if(last_channel_2 == 0){                                   //Input 9 changed from 0 to 1
			last_channel_2 = 1;                                      //Remember current input state
			timer_2 = current_time;                                  //Set timer_2 to current_time
		}
	}
	else if(last_channel_2 == 1){                                //Input 9 is not high and changed from 1 to 0
		last_channel_2 = 0;                                        //Remember current input state
		receiver_input_channel_2 = current_time - timer_2;         //Channel 2 is current_time - timer_2
	}
	//Channel 3=========================================
	if(digitalReadFast(ch3) == HIGH){                                       //Is input 10 high?
		if(last_channel_3 == 0){                                   //Input 10 changed from 0 to 1
			last_channel_3 = 1;                                      //Remember current input state
			timer_3 = current_time;                                  //Set timer_3 to current_time
		}
	}
	else if(last_channel_3 == 1){                                //Input 10 is not high and changed from 1 to 0
		last_channel_3 = 0;                                        //Remember current input state
		receiver_input_channel_3 = current_time - timer_3;         //Channel 3 is current_time - timer_3

	}
	//Channel 4=========================================
	if(digitalReadFast(ch4) == HIGH){                                       //Is input 11 high?
		if(last_channel_4 == 0){                                   //Input 11 changed from 0 to 1
			last_channel_4 = 1;                                      //Remember current input state
			timer_4 = current_time;                                  //Set timer_4 to current_time
		}
	}
	else if(last_channel_4 == 1){                                //Input 11 is not high and changed from 1 to 0
		last_channel_4 = 0;                                        //Remember current input state
		receiver_input_channel_4 = current_time - timer_4;         //Channel 4 is current_time - timer_4
	}
}



void setup() {
	// Start Serial Monitor 
	// Serial.begin(115200);
	// while(!Serial);

	// Set Pins
	pinMode(esc_1,OUTPUT);
	pinMode(esc_2,OUTPUT);
	pinMode(esc_3,OUTPUT);
	pinMode(esc_4,OUTPUT);
	pinMode(led,OUTPUT);


	// Initialize interrupt 
	attachInterrupt(ch1,chInt,CHANGE);
	attachInterrupt(ch2,chInt,CHANGE);
	attachInterrupt(ch3,chInt,CHANGE);
	attachInterrupt(ch4,chInt,CHANGE);


	// Set up esc signals and motors 
	analogWriteFrequency(esc_1, 250);
	analogWriteResolution(8);

	//Iniialize ESC
	// analogWrite(esc_1,escInit);
	// analogWrite(esc_2,escInit);
	// analogWrite(esc_3,escInit);
	// analogWrite(esc_4,escInit);
	// delay(3000);

	// Hold until throttle is in maximum position to preven init
	while(timer_3<1950);

	// Finished Setup 
	digitalWrite(led,HIGH);
	delay(250);
}

void loop() {
	loop_counter++;
	if(loop_counter == 10000)
	{
		escPulse1 = receiver_input_channel_3*pwmMax/escPulseTime;
		loop_counter = 0;
	}

	analogWrite(esc_1,escPulse1);
	analogWrite(esc_2,escPulse1);
	analogWrite(esc_3,escPulse1);
	analogWrite(esc_4,escPulse1);
}
